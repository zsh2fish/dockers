version: '2'

services:
  # NOTE: docker-compose is not required for using Wekan with Docker.
  #       You can also use Docker commands with these same environment
  #       variables: https://github.com/wekan/wekan/wiki/Docker#quay
  #-------------------------------------------------------------------
  # 1) Create a dedicated user for Wekan, for example:
  #      sudo useradd -d /home/wekan -m -s /bin/bash wekan
  # 2) Add this user to the docker group, then logout+login or reboot:
  #      sudo usermod -aG docker wekan
  # 3) Then login as user wekan.
  # 4) Create this file /home/wekan/docker-compose.yml with your modifications.
  # 5a) Running Docker as service, on Systemd like Debian 9, Ubuntu 16.04, CentOS 7:
  #      sudo systemctl enable docker
  #      sudo systemctl start docker
  # 5b) Running Docker as service, on init.d like Debian 8, Ubuntu 14.04, CentOS 6:
  #      sudo update-rc.d docker defaults
  #      sudo service docker start
  # 6) For seeing does Wekan work, try this and check with your webbroser:
  #      docker-compose up
  # 7) Stop Wekan and start Wekan in background:
  #     docker-compose stop
  #     docker-compose up -d
  # 8) See running Docker containers:
  #     docker ps
  # 9) See stopped Docker containers:
  #     docker ps -a

  # Upgrading Wekan to new version:
  # 1) Stop Wekan:
  #      docker-compose stop
  # 2) Download new version:
  #      docker-compose pull wekan
  # 3) If you have more networks for VPN etc as described at bottom of
  #    this config, download for them too:
  #      docker-compose pull wekan2
  # 4) Start Wekan:
  #      docker-compose start

  wekandb:
    # All Wekan data is stored in MongoDB. For backup and restore, see:
    #   https://github.com/wekan/wekan/wiki/Export-Docker-Mongo-Data
    image: mongo:3.2.21
    container_name: wekan-db
    restart: always
    command: mongod --smallfiles --oplogSize 128
    networks:
      - wekan-tier
    expose:
      - 27017
    volumes:
      - ./data/wekan-db:/data/db
      - ./data/wekan-db-dump:/dump

  wekan:
    # Wekan container only has Node.js and related code,
    # there is no data stored here.
    #
    # Docker Hub, usually broken:
    #image: wekanteam/wekan:latest
    #
    # Quay, usually works, updates faster:
    image: quay.io/wekan/wekan
    container_name: wekan-app
    restart: always
    networks:
      - wekan-tier
    #---------------------------------------------------------------
    # For running Wekan in different port like 3000, use: 3000:8080
    ports:
      - 50004:8080
    environment:
      #---------------------------------------------------------------
      # == ROOT_URL SETTING ==
      # Change ROOT_URL to your real Wekan URL, for example:
      #   http://example.com
      #   http://example.com/wekan
      #   http://192.168.1.100
      #---------------------------------------------------------------
      - ROOT_URL=https://example.com
      #---------------------------------------------------------------
      # == PORT SETTING ==
      # Not needed on Docker, but if you had installed from source,
      #   you could also have setup Wekan Node.js port at localhost
      #   with setting: PORT=3001
      #   and have Nginx proxy to port 3001, see Wekan wiki.
      #---------------------------------------------------------------
      # - PORT=3001
      #---------------------------------------------------------------
      # == MONGO URL AND OPLOG SETTINGS ==
      # https://github.com/wekan/wekan-mongodb/issues/2#issuecomment-378343587
      # We've fixed our CPU usage problem today with an environment
      # change around Wekan. I wasn't aware during implementation
      # that if you're using more than 1 instance of Wekan
      # (or any MeteorJS based tool) you're supposed to set
      # MONGO_OPLOG_URL as an environment variable.
      # Without setting it, Meteor will perform a pull-and-diff
      # update of it's dataset. With it, Meteor will update from
      # the OPLOG. See here
      #   https://blog.meteor.com/tuning-meteor-mongo-livedata-for-scalability-13fe9deb8908
      # After setting
      # MONGO_OPLOG_URL=mongodb://<username>:<password>@<mongoDbURL>/local?authSource=admin&replicaSet=rsWekan
      # the CPU usage for all Wekan instances dropped to an average
      # of less than 10% with only occasional spikes to high usage
      # (I guess when someone is doing a lot of work)
      #---------------------------------------------------------------
      - MONGO_URL=mongodb://wekandb:27017/wekan
      #---------------------------------------------------------------
      # - MONGO_OPLOG_URL=mongodb://<username>:<password>@<mongoDbURL>/local?authSource=admin&replicaSet=rsWekan
      #---------------------------------------------------------------
      # == EMAIL SETTINGS ==
      # Email settings are required in both MAIL_URL and Admin Panel,
      #   see https://github.com/wekan/wekan/wiki/Troubleshooting-Mail
      #   For SSL in email, change smtp:// to smtps://
      # NOTE: Special characters need to be url-encoded in MAIL_URL.
      #---------------------------------------------------------------
      # by zsh2fish - MAIL_URL=smtp://user:pass@mailserver.example.com:25/
      # by zsh2fish - MAIL_FROM='Example Wekan Support <support@example.com>'
      #---------------------------------------------------------------
      # == WEKAN API ==
      # Wekan Export Board works when WITH_API='true'.
      # If you disable Wekan API, Export Board does not work.
      - WITH_API=true
      #---------------------------------------------------------------
      ## Optional: Integration with Matomo https://matomo.org that is installed to your server
      ## The address of the server where Matomo is hosted:
      # - MATOMO_ADDRESS=https://example.com/matomo
      ## The value of the site ID given in Matomo server for Wekan
      # - MATOMO_SITE_ID=123456789
      ## The option do not track which enables users to not be tracked by matomo"
      # - MATOMO_DO_NOT_TRACK=false
      ## The option that allows matomo to retrieve the username:
      # - MATOMO_WITH_USERNAME=true
      #---------------------------------------------------------------
      # Enable browser policy and allow one trusted URL that can have iframe that has Wekan embedded inside.
      # Setting this to false is not recommended, it also disables all other browser policy protections
      # and allows all iframing etc. See wekan/server/policy.js
      - BROWSER_POLICY_ENABLED=true
      # When browser policy is enabled, HTML code at this Trusted URL can have iframe that embeds Wekan inside.
      - TRUSTED_URL=''
      #---------------------------------------------------------------
      # What to send to Outgoing Webhook, or leave out. Example, that includes all that are default: cardId,listId,oldListId,boardId,comment,user,card,commentId . 
      # example: WEBHOOKS_ATTRIBUTES=cardId,listId,oldListId,boardId,comment,user,card,commentId  
      - WEBHOOKS_ATTRIBUTES=''
      #---------------------------------------------------------------
      # OAuth2 docs: https://github.com/wekan/wekan/wiki/OAuth2
      # OAuth2 Client ID, for example from Rocket.Chat. Example: abcde12345
      # example: OAUTH2_CLIENT_ID=abcde12345
      - OAUTH2_CLIENT_ID=''
      # OAuth2 Secret, for example from Rocket.Chat: Example: 54321abcde
      # example: OAUTH2_SECRET=54321abcde
      - OAUTH2_SECRET=''
      # OAuth2 Server URL, for example Rocket.Chat. Example: https://chat.example.com
      # example: OAUTH2_SERVER_URL=https://chat.example.com
      - OAUTH2_SERVER_URL=''
      # OAuth2 Authorization Endpoint. Example: /oauth/authorize
      # example: OAUTH2_AUTH_ENDPOINT=/oauth/authorize 
      - OAUTH2_AUTH_ENDPOINT=''
      # OAuth2 Userinfo Endpoint. Example: /oauth/userinfo
      # example: OAUTH2_USERINFO_ENDPOINT=/oauth/userinfo 
      - OAUTH2_USERINFO_ENDPOINT=''
      # OAuth2 Token Endpoint. Example: /oauth/token
      # example: OAUTH2_TOKEN_ENDPOINT=/oauth/token 
      - OAUTH2_TOKEN_ENDPOINT=''
      #---------------------------------------------------------------
    depends_on:
      - wekandb

#------------------------------------------------------------------
#  When using Wekan both at office LAN and remote VPN:
#    1) Have above Wekan docker container config with LAN IP address
#    2) Copy all of above Wekan config below, change name to different
#       like wekan2 or wekanvpn, and change ROOT_URL to server VPN IP
#       address.
#    3) This way both Wekan containers can use same MongoDB database
#       and see the same Wekan boards.
#    4) You could also add 3rd Wekan container for 3rd network etc.
#------------------------------------------------------------------
#  wekan2:
#    ....COPY CONFIG FROM ABOVE TO HERE...
#    environment:
#      - ROOT_URL='http://10.10.10.10'
#      ...COPY CONFIG FROM ABOVE TO HERE...

networks:
  wekan-tier:
    driver: bridge
